#include "stdio.h"
#include "time.h"
#include "locale.h"
#include "windows.h"
#include "stdlib.h"
#include "string.h"
#pragma warning(disable : 4996)
#define N 100
#define MAXTEAMS 10
typedef struct // Создание структуры
{
	char name[N];
	int point;
	int games[N];
}sport;
int main()
{
	sport team[N];
	int size = 0, i, flag = 1, break_flag = 0, j, exit = 0;
	int team1 = 0, team2;
	int teamgames[N];
	int teams[MAXTEAMS];
	int cnt = 0, tur, s,a, game_of_tour = 0, maxgames;
	HANDLE hStdout;
	WORD LoseColor, WinColor;
	setlocale(LC_ALL, "");
	WinColor = FOREGROUND_INTENSITY | FOREGROUND_RED;
	LoseColor = FOREGROUND_INTENSITY | FOREGROUND_BLUE;
	hStdout = GetStdHandle(STD_OUTPUT_HANDLE);
	while (1)
	{
		printf("Введите:\n|1| - если хотите задать команды\n");
		printf("|2| - если хотите провести турнир\n");
		printf("|3| - если хотите вывести турнирную таблину\n");
		printf("|4| - если хотите вывести команды в порядке убывания очков\n");
		printf("|0| - если хотите выйти\n>");
		scanf("%d", &i);
		switch (i)
		{
		case 1:
				printf("Введите количество команд: ");
				scanf("%d", &size);
				if ((size < 2) || (size > 10))
				{
					printf("\n\aВведeно некорректное количество\n\n");
					rewind(stdin);
					break;
				}
			for (i = 0; i < size; i++)
			{
				printf("Введите название команды %d: ", i+1);
				while (1)
				{
					scanf("%s", &team[i].name);
					if (strlen(team[i].name) > 11)
						printf("\aЗадайте более короткое имя команды %d:", i + 1);
					else
						break;
				}
				teams[i] = i;
				for (int j = 0; j < N; j++)
				{
					if(i!=j)
						team[i].games[j] = -1;
					else
						team[i].games[j] = 99;
				}
				team[i].point = 0;
			}
			break;
		case 2:
			if (size > 0)
			{
				tur = 0;
				cnt = 0;
				do
				{
					if (break_flag == 0)
					{
						tur++;
						printf("\nТур %d\n", tur);
						for (i = 0; i < size; i++)
							teamgames[i] = teams[i];
						s = size;
						maxgames = s >> 1;
						
					}
					break_flag = 0;
					while (1)
					{
						do
						{
							srand(time(NULL));
							team2 = rand() % s;
							cnt++;
							if (cnt > 100)
							{
								cnt = 0;
								(team1 >= s) ? (team1 = 0) : team1++;
								break_flag = 1;
								break;
							}
							(team1 >= s) ? (team1 = 0) : 0;
						} while (team[teamgames[team1]].games[teamgames[team2]] != -1);
						if (break_flag == 1)
							break;
						while (1)
						{
							printf("\nВведите результат игры %s - %s -> ", team[teamgames[team1]].name, team[teamgames[team2]].name);
							scanf("%d:%d", &team[teamgames[team1]].games[teamgames[team2]], &team[teamgames[team2]].games[teamgames[team1]]);
							if (((team[teamgames[team1]].games[teamgames[team2]] < 0) || team[teamgames[team1]].games[teamgames[team2]] > 99) || ((team[teamgames[team2]].games[teamgames[team1]] < 0) || team[teamgames[team2]].games[teamgames[team1]] > 99))
							{
								printf("\n\aВведены некорректные данные\n");
								rewind(stdin);
							}
							else
								break;
						}
						if (team[teamgames[team1]].games[teamgames[team2]] == team[teamgames[team2]].games[teamgames[team1]])
						{
							team[teamgames[team1]].point++;
							team[teamgames[team2]].point++;
						}
						else
						{
							if (team[teamgames[team1]].games[teamgames[team2]] > team[teamgames[team2]].games[teamgames[team1]])
								team[teamgames[team1]].point += 3;
							else
								team[teamgames[team2]].point += 3;
						}
						for (i = team1; i < s; i++)
							teamgames[i] = teamgames[i + 1];
						for (i = team2 - 1; i < s; i++)
							teamgames[i] = teamgames[i + 1];
						s -= 2;
						team1 = 0;
						game_of_tour++;
						cnt = 0;
						if (game_of_tour >= maxgames)
						{
							game_of_tour = 0;
							break;
						}
						if ((s == 0) || (s == 1))
							break;
					}
					flag = 0;
					for (i = 0; i < size; i++)
						for (int j = 0; j < size; j++)
							if ((team[i].games[j] == -1) && (i != j))
								flag = 1;
					if(flag == 0)
						printf("\nТурнир окончен\n\n");
				} while (flag != 0);
			}
			else
				printf("\n\aИмя и количество команд ещё не известно\n\n");
			break;
		case 3:
			if (size > 0)
			{
				printf("\n\n\tТурнирная таблица:\n\nИмя команды|");
				for (i = 0; i < size; i++)
					printf("%11s|", team[i].name);
				printf(" Очки ");
				printf("\n");
				for (i = 0; i < size; i++)
				{
					printf(" %10s|", team[i].name);
					for (j = 0; j < size; j++)
					{
						if (i != j)
						{
							if (team[i].games[j] > team[j].games[i])
								SetConsoleTextAttribute(hStdout, WinColor);
							else if (team[i].games[j] < team[j].games[i])
								SetConsoleTextAttribute(hStdout, LoseColor);
							if (team[i].games[j] != -1)
								printf("   %2d:%-2d   ", team[i].games[j], team[j].games[i]);
							else
								printf("           ");
							SetConsoleTextAttribute(hStdout, 7);
							printf("|");
						}
						else
						{
							printf("   -----   |");
						}
					}
					printf("%2d", team[i].point);
					printf("\n");
				}
			}
			else
				printf("\n\aТаблица не инициализирована\n\n");
			break;
		case 0:
			return 0;
		default:
				printf("\n\aВведена неизвестная команда\n\n");
				rewind(stdin);
			break;
		}
	}
}
